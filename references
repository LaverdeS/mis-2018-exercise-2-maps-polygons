Centroid, SphericalUtil and Area
(1) www.intmath.com/applications-integration/5-centroid-area.php
(2) http://stackoverflow.com/questions/28838287/calculate-the-area-of-a-polygon-drawn-on-google-maps-in-an-an; droid-application
(7) http://stackoverflow.com/questions/9752334/calculate-centroid-of-android-graphics-path-values-and-find-the-centroids-rela
(8) http://www.androiddevelopersolutions.com/2015/02/android-calculate-center-of-polygon-in.html

Request location permision OnMapReady
(3) https://developer.android.com/training/location/retrieve-current.html
(4) https://developer.android.com/training/permissions/index.html

onMapLongClick
(5) http://stackoverflow.com/questions/16097143/google-maps-android-api-v2-detect-long-click-on-map-and-add-marker-not-working

SharedPreferences
(6) http://stackoverflow.com/questions/25438043/store-google-maps-markers-in-sharedpreferences

Non-Self-Intersecting polygons
(9) https://stackoverflow.com/questions/14263284/create-non-intersecting-polygon-passing-through-all-given-points (a simplified version)
The function orders a list of coordinates such that the distance between each two adjacent vertices is minimal. This property leads to have
a convex polygon generated from the vertices. The function is called only if markers.size() > 3. Hence there are no risks of NullPointerEXception.
The complexity of the algorithm is O(n^2), not efficient but simple and effective
